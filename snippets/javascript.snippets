snippet f
	function ${1}(${2}) {
		${3}
	}
snippet fn
	function ${1:name}(${2}) {
		${3}
	};
snippet fa
	function (${2}) {
		${3}
	}${1}
snippet fe
	forEach( function(${1:item}) {
		${3}
	})${2}
snippet f:
	${1:name}: function (${3}) {
		${4}
	}${2:,}
snippet for
	for (var prop in ${1:expression}) {
		if ( ! ${2:expression}.hasOwnProperty(prop)) { continue; }

		${3}
	}
snippet fori
	for (var item, i = 0; i < ${1:expression}.length; ++i ) {
		item = ${2:expression}[i];
		${3}
	}
snippet try
	try {
		${1}
	} catch (err) {
		${2}
	}
snippet if
	if (${1}) {
		${2}
	}
snippet sw
	switch (${1:expression}) {
		case ${2:expression}:
			${3}
			break;
		default:
			${4}
	}
snippet /**
	/**
		${1}
	*/
snippet clog
	console.log("${1}"${2});
snippet dp
	Object.defineProperty(${1:object}, '${2:property}', {
		get: function () {
			${3}
		},

		set: function () {
			${4}
		}
	});
snippet sett
	setTimeout( function (${1}) {
		${2}
	});
